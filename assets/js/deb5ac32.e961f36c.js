"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[743],{3905:(e,n,t)=>{t.d(n,{Zo:()=>v,kt:()=>l});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),c=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},v=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,v=p(e,["components","mdxType","originalType","parentName"]),d=c(t),l=r,_=d["".concat(i,".").concat(l)]||d[l]||u[l]||o;return t?a.createElement(_,s(s({ref:n},v),{},{components:t})):a.createElement(_,s({ref:n},v))}));function l(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=d;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,s[1]=p;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8696:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={},s="Events",p={unversionedId:"contracts/Swap/swap_events",id:"contracts/Swap/swap_events",title:"Events",description:"paircreatedevent",source:"@site/docs/contracts/Swap/swap_events.md",sourceDirName:"contracts/Swap",slug:"/contracts/Swap/swap_events",permalink:"/docs/contracts/Swap/swap_events",draft:!1,editUrl:"https://github.com/AnimeSwap/docs/blob/main/docs/contracts/Swap/swap_events.md",tags:[],version:"current",frontMatter:{},sidebar:"contracts",previous:{title:"Resources",permalink:"/docs/contracts/Swap/swap_resources"},next:{title:"Examples for contracts",permalink:"/docs/contracts/Swap/swap_examples"}},i={},c=[{value:"pair_created_event",id:"pair_created_event",level:2},{value:"mint_event",id:"mint_event",level:2},{value:"burn_event",id:"burn_event",level:2},{value:"swap_event",id:"swap_event",level:2},{value:"sync_event",id:"sync_event",level:2},{value:"flash_swap_event",id:"flash_swap_event",level:2}],v={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},v,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"events"},"Events"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-move"},"struct PairInfo has key {\n    pair_list: vector<PairMeta>,\n}\n\nstruct Events<phantom CoinType1, phantom CoinType2> has key {\n    pair_created_event: event::EventHandle<PairCreatedEvent<CoinType1, CoinType2>>,\n    mint_event: event::EventHandle<MintEvent<CoinType1, CoinType2>>,\n    burn_event: event::EventHandle<BurnEvent<CoinType1, CoinType2>>,\n    swap_event: event::EventHandle<SwapEvent<CoinType1, CoinType2>>,\n    sync_event: event::EventHandle<SyncEvent<CoinType1, CoinType2>>,\n    flash_swap_event: event::EventHandle<FlashSwapEvent<CoinType1, CoinType2>>,\n}\n\nstruct PairCreatedEvent<phantom CoinType1, phantom CoinType2> has drop, store {\n    sender_address: address,\n    meta: PairMeta,\n}\n\nstruct MintEvent<phantom CoinType1, phantom CoinType2> has drop, store {\n    sender_address: address,\n    amount_x: u64,\n    amount_y: u64,\n}\n\nstruct BurnEvent<phantom CoinType1, phantom CoinType2> has drop, store {\n    sender_address: address,\n    amount_x: u64,\n    amount_y: u64,\n}\n\nstruct SwapEvent<phantom CoinType1, phantom CoinType2> has drop, store {\n    sender_address: address,\n    amount_x_in: u64,\n    amount_y_in: u64,\n    amount_x_out: u64,\n    amount_y_out: u64,\n}\n\nstruct SyncEvent<phantom CoinType1, phantom CoinType2> has drop, store {\n    reserve_x: u64,\n    reserve_y: u64,\n}\n\nstruct FlashSwapEvent<phantom CoinType1, phantom CoinType2> has drop, store {\n    sender_address: address,\n    loan_coin_1: u64,\n    loan_coin_2: u64,\n    repay_coin_1: u64,\n    repay_coin_2: u64,\n}\n")),(0,r.kt)("h2",{id:"pair_created_event"},"pair_created_event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-move"},"let pair_meta = get_pair_meta<CoinType1, CoinType2>();\nevent::emit_event(&mut events.pair_created_event, PairCreatedEvent {\n    sender_address: signer::address_of(account),\n    meta: pair_meta,\n});\n")),(0,r.kt)("h2",{id:"mint_event"},"mint_event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.mint_event, MintEvent {\n    sender_address: signer::address_of(account),\n    amount_x,\n    amount_y,\n});\n")),(0,r.kt)("h2",{id:"burn_event"},"burn_event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.burn_event, BurnEvent {\n    sender_address: signer::address_of(account),\n    amount_x,\n    amount_y,\n});\n")),(0,r.kt)("h2",{id:"swap_event"},"swap_event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.swap_event, SwapEvent {\n    sender_address: signer::address_of(account),\n    amount_x_in,\n    amount_y_in,\n    amount_x_out,\n    amount_y_out,\n});\n")),(0,r.kt)("h2",{id:"sync_event"},"sync_event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.sync_event, SyncEvent {\n    reserve_x,\n    reserve_y,\n});\n")),(0,r.kt)("h2",{id:"flash_swap_event"},"flash_swap_event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.flash_swap_event, FlashSwapEvent {\n    sender_address: signer::address_of(account),\n    loan_coin_1,\n    loan_coin_2,\n    repay_coin_1,\n    repay_coin_2,\n});\n")))}u.isMDXComponent=!0}}]);