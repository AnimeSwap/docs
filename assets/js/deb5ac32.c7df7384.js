"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[743],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},v={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},l=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=c(n),m=a,_=l["".concat(p,".").concat(m)]||l[m]||v[m]||o;return n?r.createElement(_,i(i({ref:t},u),{},{components:n})):r.createElement(_,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=l;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},8696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>v,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},i="Events",s={unversionedId:"contracts/Swap/swap_events",id:"contracts/Swap/swap_events",title:"Events",description:"paircreatedevent",source:"@site/docs/contracts/Swap/swap_events.md",sourceDirName:"contracts/Swap",slug:"/contracts/Swap/swap_events",permalink:"/docs/contracts/Swap/swap_events",draft:!1,editUrl:"https://github.com/AnimeSwap/docs/blob/main/docs/contracts/Swap/swap_events.md",tags:[],version:"current",frontMatter:{},sidebar:"contracts",previous:{title:"Resources",permalink:"/docs/contracts/Swap/swap_resources"},next:{title:"Entry Functions",permalink:"/docs/contracts/MasterChef/masterchef_api"}},p={},c=[{value:"pair_created_event",id:"pair_created_event",level:2},{value:"mint_event",id:"mint_event",level:2},{value:"burn_event",id:"burn_event",level:2},{value:"swap_event",id:"swap_event",level:2},{value:"sync_event",id:"sync_event",level:2}],u={toc:c};function v(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"events"},"Events"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-move"},"// save this resource to DEPLOYER\nstruct PairInfo has key {\n    pair_list: vector<PairMeta>,\n    pair_created_event: event::EventHandle<PairMeta>,\n}\n\n// save this resource to caller\nstruct Events has key {\n    mint_event: event::EventHandle<MintEvent>,\n    burn_event: event::EventHandle<BurnEvent>,\n    swap_event: event::EventHandle<SwapEvent>,\n    sync_event: event::EventHandle<SyncEvent>,\n}\n\nstruct MintEvent has drop, store {\n    pair_meta: PairMeta,\n    amount_x: u64,\n    amount_y: u64,\n}\n\nstruct BurnEvent has drop, store {\n    pair_meta: PairMeta,\n    amount_x: u64,\n    amount_y: u64,\n}\n\nstruct SwapEvent has drop, store {\n    pair_meta: PairMeta,\n    amount_x_in: u64,\n    amount_y_in: u64,\n    amount_x_out: u64,\n    amount_y_out: u64,\n}\n\nstruct SyncEvent has drop, store {\n    pair_meta: PairMeta,\n    reserve_x: u64,\n    reserve_y: u64,\n}\n")),(0,a.kt)("h2",{id:"pair_created_event"},"pair_created_event"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-move"},"let pair_meta = get_pair_meta<CoinType1, CoinType2>();\nevent::emit_event(&mut pair_info.pair_created_event, pair_meta);\n")),(0,a.kt)("h2",{id:"mint_event"},"mint_event"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.mint_event, MintEvent {\n    pair_meta: get_pair_meta<CoinType1, CoinType2>(),\n    amount_x,\n    amount_y,\n});\n")),(0,a.kt)("h2",{id:"burn_event"},"burn_event"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.burn_event, BurnEvent {\n    pair_meta: get_pair_meta<CoinType1, CoinType2>(),\n    amount_x,\n    amount_y,\n});\n")),(0,a.kt)("h2",{id:"swap_event"},"swap_event"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.swap_event, SwapEvent {\n    pair_meta: get_pair_meta<CoinType1, CoinType2>(),\n    amount_x_in,\n    amount_y_in,\n    amount_x_out,\n    amount_y_out,\n});\n")),(0,a.kt)("h2",{id:"sync_event"},"sync_event"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-move"},"event::emit_event(&mut events.sync_event, SyncEvent {\n    pair_meta: get_pair_meta<CoinType1, CoinType2>(),\n    reserve_x,\n    reserve_y,\n});\n")))}v.isMDXComponent=!0}}]);